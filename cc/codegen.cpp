#include "codegen.hpp"
#include <format>

void CodeGen::visit(cparse::TranslationUnit &tu) {
  out << "\t; Generated by zdk-cc\n";
  cparse::Visitor<void>::visit(tu);
}

void CodeGen::visit(cparse::FunctionDefinition &fd) {
  out << "\t.section .text\n";
  out << std::format("\t.global _{}\n", fd.name);
  out << std::format("_{}:\n", fd.name);
  out << "\tpush ix\n";
  out << std::format("\tld ix, {}\n", -analyzer.frame_size[fd.name]);
  out << "\tadd ix, sp\n";

  cparse::Visitor<void>::visit(fd);
}

void CodeGen::visit(cparse::ReturnStatement &rs) {
  if (rs.expression) {
    visit(*rs.expression);
  }
  out << "\tld sp, ix\n";
  out << "\tpop ix\n";
  out << "\tret\n";
}

void CodeGen::visit(cparse::ConstantExpression &ce) {
  out << std::format("\tld hl, {}\n", ce.value);
}
